[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 11.0.2)
[debug] Load.defaultLoad until apply took 114.767516ms
[debug]           Load.loadUnit: plugins took 106.582728ms
[debug]           Load.loadUnit: defsScala took 0.363882ms
[debug] [Loading] Scanning directory /Users/samshitha_roy/IdeaProjects/Hello_scala/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/samshitha_roy/IdeaProjects/Hello_scala/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.561301 ms
[debug]               Load.resolveProject(hello_scala-build) took 68.482133ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hello_scala-build, base: /Users/samshitha_roy/IdeaProjects/Hello_scala/project, plugins: List(<none>))) took 143.342644ms
[debug] [Loading] Done in /Users/samshitha_roy/IdeaProjects/Hello_scala/project, returning: (hello_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 171.643661ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.315643ms
[debug]         Load.loadUnit(file:/Users/samshitha_roy/IdeaProjects/Hello_scala/project/, ...) took 285.56055ms
[debug]       Load.apply: load took 664.805889ms
[debug]       Load.apply: resolveProjects took 9.891613ms
[debug]       Load.apply: finalTransforms took 77.187875ms
[debug]       Load.apply: config.delegates took 10.549941ms
[debug]       Load.apply: Def.make(settings)... took 518.718398ms
[debug]       Load.apply: structureIndex took 115.061348ms
[debug]       Load.apply: mkStreams took 2.061616ms
[info] loading project definition from /Users/samshitha_roy/IdeaProjects/Hello_scala/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4786.758103ms
[debug]     Load.loadUnit: defsScala took 0.006173ms
[debug] [Loading] Scanning directory /Users/samshitha_roy/IdeaProjects/Hello_scala
[debug]       Load.loadUnit: mkEval took 11.26187ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.855299 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.893228ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/samshitha_roy/IdeaProjects/Hello_scala, plugins: List(<none>))) took 6.24359ms
[debug] [Loading] Done in /Users/samshitha_roy/IdeaProjects/Hello_scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2743.066175ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.02436ms
[debug]   Load.loadUnit(file:/Users/samshitha_roy/IdeaProjects/Hello_scala/, ...) took 7535.359651ms
[debug] Load.apply: load took 7559.263578ms
[debug] Load.apply: resolveProjects took 0.121706ms
[debug] Load.apply: finalTransforms took 9.541688ms
[debug] Load.apply: config.delegates took 0.4367ms
[debug] Load.apply: Def.make(settings)... took 81.14348ms
[debug] Load.apply: structureIndex took 29.857595ms
[debug] Load.apply: mkStreams took 0.002725ms
[info] set current project to Hello_scala (in build file:/Users/samshitha_roy/IdeaProjects/Hello_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/samshitha_roy/.sbt/1.0/server/5e16529c9049d286f257/sock
[debug] Writing bsp connection file
[info] started sbt server
